xamarin studio
f#.org

-------------------------------------------------------------------------------------------------------------------------------

printf «Hello, world!»

-------------------------------------------------------------------------------------------------------------------------------

open System

Console.WriteLine(«Hello, world!»)

-------------------------------------------------------------------------------------------------------------------------------

let rec fact n = 			// rec - функция рекурсивная; let - "допустим", для объявления переменных и функций
	match n with			// 
	|0 -> 1
	|1 -> 1
	| _ -> n * fact (n-1)	// default ветка // на самом деле последняя операция в рекурсии - умножение

printf "%i" (fact 5)	

-------------------------------------------------------------------------------------------------------------------------------

let rec loop i acc = 
		match i with 
		|0|1 -> acc
		|_ -> loop (i-1) (acc * i)

let "rec" fact n =
		loop n 1

printf "%i" (fact 6)

-------------------------------------------------------------------------------------------------------------------------------

Очень странно относится к отступам

-------------------------------------------------------------------------------------------------------------------------------

let fact n = 
	let rec loop i acc = 
		match i with 
		|0|1 -> acc
		|_ -> loop (i-1) (acc * i)
	loop n 1

printf "%i" (fact 6)

-------------------------------------------------------------------------------------------------------------------------------

let minMax a b = 
	if a < b then (a, b) 		// else нужна обязательно, так как возвращает кортеж
	else (b, a)					// сравнение - "="

let (min, max) = minMax 13 8
printf "a: %i; b: %i" min max


let v = minMax 13 8
let a1 = fst v

-------------------------------------------------------------------------------------------------------------------------------

Если функция возвращает кортеж, то длина всегда фиксирована

-------------------------------------------------------------------------------------------------------------------------------

let minMaxAvg a b =
	if a < b then (a, b, (a+b)/2.0)
	else (b, a, (a+b)/2.0)

let (min, max, avg) = minMaxAvg 13.0 8.0
printf "a: %f; b: %f;" min max avg

-------------------------------------------------------------------------------------------------------------------------------

let minMax (a:int) b =  		// принимает только тип int

-------------------------------------------------------------------------------------------------------------------------------

let plus a b = a + b
let mult a b = a * b

let operationMaker operation a b = 
	operation a b 

printf "%i" (operationMaker plus 8 5)

-------------------------------------------------------------------------------------------------------------------------------

let plus_8 a = plus a 8  			// корирование

printf "%i" (plus_8 7)






?принимает n и возвращает n-ый член последовательности фиббоначчи
let rec loopFibo i acc1 acc2 = 
	match i with
	|0 -> acc1
	|1 -> acc2
	|_ -> loopFibo (i-1) acc2 (acc1 + acc2)
let fiboTale n = 
	loopFibo n 0 1
printf "%i" (fiboTale 6)


последовательность а + 2*b с помощью коррирования

let func a b = a + 2 * b
let rec loopFiboNew i func acc1 acc2 = 
	match i with
	|0 -> acc1
	|1 -> acc2
	|_ -> loopFibo (i-1) acc2 ( func acc1 acc2)
let fiboTaleNew n = 
	loopFiboNew n func 0 1
printf "%i" (fiboTaleNew 6)










